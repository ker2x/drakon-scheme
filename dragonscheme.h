/* Autogenerated with DRAKON Editor 1.14 */
#ifndef DRAGONSCHEME_H49829
#define DRAGONSCHEME_H49829

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>


typedef enum {THE_EMPTY_LIST, BOOLEAN, SYMBOL, FIXNUM, CHARACTER, STRING,PAIR} object_type;

typedef struct object {
    object_type type;
    union {
	struct {
            char value;
        } boolean;
        struct {
            char *value;
        } symbol;
        struct {
            long value;
        } fixnum;
        struct {
            char value;
        } character;
	struct {
        char *value;
        } string;
        struct {
            struct object *car;
            struct object *cdr;
        } pair;
    } data;
} object;

object* alloc_object(
    void
);

object* car(
    object* pair
);

object* cdr(
    object *pair
);

object* cons(
    object* car,
    object* cdr
);

void eat_expected_string(
    FILE *in,
    char *str
);

void eat_whitespace(
    FILE *in
);

object* eval(
    object *exp
);

void init(
    void
);

char is_boolean(
    object *obj
);

char is_character(
    object *obj
);

char is_delimiter(
    int c
);

char is_false(
    object *obj
);

char is_fixnum(
    object *obj
);

char is_initial(
    int c
);

char is_pair(
    object* obj
);

char is_string(
    object *obj
);

char is_symbol(
    object *obj
);

char is_the_empty_list(
    object *obj
);

char is_true(
    object *obj
);

void main(
    void
);

object* make_character(
    char value
);

object* make_fixnum(
    long value
);

object* make_string(
    char* value
);

object* make_symbol(
    char* value
);

int peek(
    FILE *in
);

void peek_expected_delimiter(
    FILE *in
);

object* read(
    FILE *in
);

object* read_character(
    FILE *in
);

object* read_pair(
    FILE *in
);

void set_car(
    object* obj,
    object* value
);

void set_cdr(
    object* obj,
    object* value
);

void write(
    object* obj
);

void write_pair(
    object* pair
);


#endif

