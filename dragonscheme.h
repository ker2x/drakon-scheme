/* Autogenerated with DRAKON Editor 1.14 */
#ifndef DRAGONSCHEME_H65375
#define DRAGONSCHEME_H65375

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>


typedef enum {THE_EMPTY_LIST, BOOLEAN, SYMBOL, FIXNUM, CHARACTER, STRING,PAIR} object_type;

typedef struct object {
    object_type type;
    union {
	struct {
            char value;
        } boolean;
        struct {
            char *value;
        } symbol;
        struct {
            long value;
        } fixnum;
        struct {
            char value;
        } character;
	struct {
        char *value;
        } string;
        struct {
            struct object *car;
            struct object *cdr;
        } pair;
    } data;
} object;

void add_binding_to_frame(
    object* var,
    object* val,
    object* frame
);

object* alloc_object(
    void
);

object* assignment_value(
    object* exp
);

object* assignment_variable(
    object* exp
);

object* car(
    object* pair
);

object* cdr(
    object *pair
);

object* cons(
    object* car,
    object* cdr
);

void define_variable(
    object *var,
    object *val,
    object *env
);

object* definition_value(
    object* exp
);

object* definition_variable(
    object* exp
);

void eat_expected_string(
    FILE *in,
    char *str
);

void eat_whitespace(
    FILE *in
);

object* enclosing_environment(
    object* env
);

object* eval(
    object *exp,
    object *env
);

object* eval_assignment(
    object* exp,
    object* env
);

object* eval_definition(
    object* exp,
    object* env
);

object* extend_environment(
    object *vars,
    object *vals,
    object *base_env
);

object* first_frame(
    object* env
);

object* frame_values(
    object* frame
);

object* frame_variables(
    object* frame
);

void init(
    void
);

char is_assignment(
    object* exp
);

char is_boolean(
    object *obj
);

char is_character(
    object *obj
);

char is_definition(
    object* exp
);

char is_delimiter(
    int c
);

char is_false(
    object *obj
);

char is_fixnum(
    object *obj
);

char is_initial(
    int c
);

char is_pair(
    object* obj
);

char is_quoted(
    object* expression
);

char is_self_evaluating(
    object* exp
);

char is_string(
    object *obj
);

char is_symbol(
    object *obj
);

char is_tagged_list(
    object* expression,
    object* tag
);

char is_the_empty_list(
    object *obj
);

char is_true(
    object *obj
);

char is_variable(
    object* expression
);

object* lookup_variable_value(
    object* var,
    object* env
);

void main(
    void
);

object* make_character(
    char value
);

object* make_fixnum(
    long value
);

object* make_frame(
    object* variables,
    object* values
);

object* make_string(
    char* value
);

object* make_symbol(
    char* value
);

int peek(
    FILE *in
);

void peek_expected_delimiter(
    FILE *in
);

object* read(
    FILE *in
);

object* read_character(
    FILE *in
);

object* read_pair(
    FILE *in
);

void set_car(
    object* obj,
    object* value
);

void set_cdr(
    object* obj,
    object* value
);

void set_variable_value(
    object* var,
    object* val,
    object* env
);

object* setup_environment(
    void
);

object* text_of_quotation(
    object* exp
);

void write(
    object* obj
);

void write_pair(
    object* pair
);


#endif

