/* Autogenerated with DRAKON Editor 1.14 */
#ifndef DRAGONSCHEME_H17826
#define DRAGONSCHEME_H17826

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>


typedef enum {BOOLEAN, FIXNUM, CHARACTER, STRING} object_type;

typedef struct object {
    object_type type;
    union {
	struct {
            char value;
        } boolean;
        struct {
            long value;
        } fixnum;
        struct {
            char value;
        } character;
	struct {
        char *value;
        } string;
    } data;
} object;

object* alloc_object(
    void
);

void eat_expected_string(
    FILE *in,
    char *str
);

void eat_whitespace(
    FILE *in
);

object* eval(
    object *exp
);

void init(
    void
);

char is_boolean(
    object *obj
);

char is_character(
    object *obj
);

char is_delimiter(
    int c
);

char is_false(
    object *obj
);

char is_fixnum(
    object *obj
);

char is_string(
    object *obj
);

char is_true(
    object *obj
);

void main(
    void
);

object* make_character(
    char value
);

object* make_fixnum(
    long value
);

object* make_string(
    char* value
);

int peek(
    FILE *in
);

void peek_expected_delimiter(
    FILE *in
);

object* read(
    FILE *in
);

object* read_character(
    FILE *in
);

void write(
    object* obj
);


#endif

